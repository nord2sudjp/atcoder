#　背景

## 筆者のレベル

AtCoderはこれまでに九回参加しました。現在は灰色です。過去問ではCはほぼ解き終えて、現在D問題に着手しています。茶色になりたい！



## なぜこの記事を書こうとしたのか

AtCoderで茶色以上を目指すのであれば動的計画法（以降DP）は避けて通れない。脱初級者向けに学ばなければならいないアルゴリズムとしては例えば全探索（基礎から応用まで）、ビット探索、BFS、DFSなどある。しかしDPは自分の見立てではこれらのアルゴリズムと比べると一段階～二段階難しいレベルあると感じられる。

難しい理由としては以下がある。

* 探索やBFS/DFSは考えかとして直感的にわかりやすいが、コーディングに落とし込むところで知識が必要なる。しかしDPの考え方がややこしい。
* 最も基本となるDPでもコーディングでは再帰を利用する必要がある。
* 実際の競プロでは再帰を利用するとTLEになるため、工夫を加えたメモ化再帰もしくは漸化式を利用する。
* DPで選択する変数を間違えるとTLEになってしまう。

DP全般としては後述するが、素晴らしい記事がいくつもあるのでそちらをまず参考にするべきである。

DPの基本を学ぶと、TLEにならないために速度をあげるチューニングが必要になる。この際に出てくるのが漸化式による記述方法である。例えば蟻本ならP52～P53で再帰を利用したDP、そしてP54～P56で漸化式を利用したDPについて記述されている。蟻本には漸化式について以下ような記述がある。

> "慣れてくれば直接漸化式を作れるようにもなっていきます"

しかしこの記述だけで漸化式による考え方を理解するのは至難の業だろう。この記述を読み、理解し、慣れたらかけた人はこの記事を読む必要はない。

## この記事が対象にしている人

この記事が目的とするのはDPは何となく理解して、再帰およびメモ化再帰までは何となくかけるが漸化式の意味が理解できないという人である。

この記事では以下を記載している。

* 漸化式によるDPの考え方

この記事では以下については記載していない。

* DPの基本的な考え方
* 再帰もしくはメモ化再帰の考え方
* 漸化式を利用したコーディング

## 

## 参考にするべき記事

DPの基本がわからない人はまず以下の記事を読むべきである。

https://qiita.com/drken/items/dc53c683d6de8aeacf5a

基礎をまなぶには全部読む必要はないと思う。チャプター1～3（Flog - A）まででDPの基本は完全といってもよいくらいに身に付く。

# DPコンテストFlog - A

## 貰うDP

### 全体概要

### 初期化

### 最初の一回

### 繰り返し



## 配るDP

### 全体概要

### 初期化

### 最初の一回

### 繰り返し



## 

# 蟻本ナップサック問題

## 貰うDP

### 全体概要

### 初期化

### 最初の一回

### 繰り返し



## 

## 配るDP

### 全体概要

### 初期化

### 最初の一回

### 繰り返し

## 

# 結論